/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}
// license info
mainClassName = 'boss.metrics.RunPoller'

jar {
    baseName = 'jmxBossPoller'
    version =  '1.0.0'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    compile files('libs/jboss-cli-client.jar')
    
    	// logging
    compile "org.apache.logging.log4j:log4j-api:2.12.1"
  	compile "org.apache.logging.log4j:log4j-core:2.12.1"
  	compile "org.apache.logging.log4j:log4j-web:2.12.1"
    
    //json
    compile "com.fasterxml.jackson.core:jackson-core:2.9.3"
    compile "com.fasterxml.jackson.core:jackson-annotations:2.9.3"
	compile "com.fasterxml.jackson.core:jackson-databind:2.9.3"
	
	
	//lombok
	compile "org.projectlombok:lombok:1.16.16"
	
	//cli
	compile "commons-cli:commons-cli:1.3.1"
}

task copyConfig {
    def config = file("$buildDir/config")
    outputs.dir config
    doLast {
        config.mkdirs()
        copy {
            from 'config'
            into config
            include '**/*.*'
        }
    }
}

task copyBatch {
	def batch = file("$buildDir/batch")
    outputs.dir batch

    doLast {
        copy {
            from 'batch'
            into batch
            include '**/*.sh'
        }
    }
}

startScripts.onlyIf {false}

distributions {
    main {
        baseName = "jmxBossPoller"
        contents {
        	   from(copyConfig) {
                into ("config")
            }
           from(copyBatch) {
                into ("/jmxBossPoller")
            }
            exclude('batch/*.*')
        }
    }
}

